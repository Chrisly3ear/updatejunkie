# This is a Willhaben sample configuration file. Copy 'willhaben.cfg.sample' to 
# 'willhaben.cfg' and adjust it to your needs. As an alternative you can pass the
# path to an arbitrary config file as argument to 'main.py'


[General]

# SMTP configuration
# ------------------

# Host name of your ISP's SMTP server
smtp.host = smtp.example.com

# The server port of your ISP's SMTP server (try 25 if unsure)
smtp.port = 25

# Username for authentication with the SMTP server
smtp.user = user553

# Password for authentication with the SMTP server
smtp.password = secret678

# From-address in the email notification
address.from = Willhaben<contact@willhaben.at>


[Observers]

# The following list of observers are set up in this configuration. Each observer
# has a config section with the same name.
observers = ExampleObserver1, ExampleObserver2


[ExampleObserver1]

# Copy the URL of the willhaben.at listing you want to observe
url = http://www.example1.com/

# If this option is 'no' the observer will forget all seen ads after closing
ads.store = yes

# Time (seconds) between two polls
update.interval = 60

# Title criteria
# --------------

# All of these keywords must appear in an ad's title in order to trigger a 
# notification
keywords.all = word1, word2

# At least one of these keywords must appear in an ad's title in order to to 
# trigger a notification
keywords.any = word3, word4, word5

# None of these keywords are allowed to appear in an ad's title in order to 
# trigger a notification
keywords.not = bad-word1, bad-word2

# Price criteria
# --------------

# The ad's price must be less or equal in order to trigger a notification. Set 
# '0' for unlimited
price.limit = 520

# Notifications
# -------------

# Utilize the notification center in OSX >= 10.8
osx.active = no

# GTK notifications. Requires the python modules PyNotify2 and PyGTK!
gtk.active = no

# Email notification requires working SMTP settings in the 'Email' section below.
email.active = yes

# Recipient of the email notification
email.to = John Doe<john.doe@example1.com>

# The title used in notifications. For example in emails the title is used for 
# the email subject. The keys in the curly brackets are replaced with information
# retrieved from the particular ad. 
notification.title = {title} for {price}

# The body of the notification. The keys in the curly brackets are replaced with 
# information retrieved from the particular ad. 
notification.body = I found a new ad! The title is "{title}" and the price is {price}. {url}


[ExampleObserver2]

# Copy the URL of the willhaben.at listing you want to observe
url = http://www.example2.com/

# If this option is 'no' the observer will forget all seen ads after closing
ads.store = no

# Time (seconds) between two polls
update.interval = 120

# Title criteria
# --------------

# All of these keywords must appear in an ad's title in order to trigger a 
# notification
keywords.all = word6, word7

# At least one of these keywords must appear in an ad's title in order to to 
# trigger a notification
keywords.any = word8, word9, word10

# None of these keywords are allowed to appear in an ad's title in order to 
# trigger a notification
keywords.not = bad-word3, bad-word4


# Price criteria
# --------------

# The ad's price must be less or equal in order to trigger a notification. Set 
# '0' for unlimited
price.limit = 0

# Notifications
# -------------

# Utilize the notification center in OSX >= 10.8
osx.active = yes

# GTK notifications. Requires the python modules PyNotify2 and PyGTK!
gtk.active = no

# Email notification requires working SMTP settings in the 'Email' section below.
email.active = no

# Recipient of the email notification
email.to = Alice Doe<alice.doe@example2.com>

# The title used in notifications. For example in emails the title is used for
# the email subject. The keys in the curly brackets are replaced with information
# retrieved from the particular ad.
notification.title = {title} for {price}

# The body of the notification. The keys in the curly brackets are replaced with
# information retrieved from the particular ad.
notification.body = I found a new ad! The title is "{title}" and the price is {price}. {url}