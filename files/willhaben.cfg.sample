# This is a Willhaben sample configuration file. Copy 'willhaben.cfg.sample' to 
# 'willhaben.cfg' and adjust it to your needs. As an alternative you can pass the
# path to an arbitrary config file as argument to 'main.py'


[General]

# SMTP configuration
# ------------------

# Host name of your ISP's SMTP server
smtp.host = smtp.example.com

# The server port of your ISP's SMTP server (try 25 if unsure)
smtp.port = 25

# Username for authentication with the SMTP server
smtp.user = user553

# Password for authentication with the SMTP server
smtp.password = secret678


[Observers]

# The following list of observers are set up in this configuration. Each observer
# has a config section with the same name.
observers = ExampleObserver1, ExampleObserver2


[ExampleObserver1]

# Willhaben needs a profile to know how to obtain ads from a certain website.
# These profiles are stored in the 'connector_profiles' folder.
profile = Willhaben

# Got to the website and browse until you get the listing you want to observe.
# Then copy the URL and paste it here.
url = http://www.example1.com/

# If this option is 'no' the observer will forget all seen ads after close.
ads.store = yes

# Time interval (seconds) between two polls
update.interval = 60

# Trigger criteria
# ----------------

# This section is completely optional. Whenever Willhaben finds an ad it will
# extract tags from it (e.g. {title}, {price}, etc). These tags are specified
# in the used profile. Based on the tags' content Willhaben allows you to set
# up certain criteria new ads have to satisfy in order to trigger a
# notification. There is an example for each available type of criteria.

# In this example the tag named 'title' must contain all the words from the list
keywords.title.all = word1, word2

# In this example the tag named 'description' must contain any of the words
# from the list
keywords.description.any = word3, word4, word5

# None of these keywords are allowed to appear in the tag named 'title'
keywords.title.not = bad-word1, bad-word2

# The value of the tag 'price' must be equal or less than 520 (price needs to
# be an integer or a float type)
price.limit = 520

# Notifications
# -------------

# Utilize the notification center in OSX >= 10.8
osx.active = no

# GTK notifications. Requires the python modules PyNotify2 and PyGTK.
# !DEPRECATED! (and most probably broken)
gtk.active = no

# Email notification requires a working SMTP configuration in the [General]
# section.
email.active = yes

# Recipient of the email notification
email.to = John Doe<john.doe@example1.com>


[ExampleObserver2]

# Willhaben needs a profile to know how to obtain ads from a certain website.
# These profiles are stored in the 'connector_profiles' folder.
profile = DoodleComments

# Got to the website and browse until you get the listing you want to observe.
# Then copy the URL and paste it here.
url = http://www.example2.com/

# If this option is 'no' the observer will forget all seen ads after close.
ads.store = yes

# Time interval (seconds) between two polls
update.interval = 180

# Trigger criteria
# ----------------

# This section is completely optional. Whenever Willhaben finds an ad it will
# extract tags from it (e.g. {title}, {price}, etc). These tags are specified
# in the used profile. Based on the tags' content Willhaben allows you to set
# up certain criteria new ads have to satisfy in order to trigger a
# notification. There is an example for each available type of criteria.

# In this example the tag named 'title' must contain all the words from the list
keywords.title.all = word1, word2

# In this example the tag named 'description' must contain any of the words
# from the list
keywords.description.any = word3, word4, word5

# None of these keywords are allowed to appear in the tag named 'title'
keywords.title.not = bad-word1, bad-word2

# The value of the tag 'price' must be equal or less than 520 (price needs to
# be an integer or a float type)
price.limit = 520

# Notifications
# -------------

# Utilize the notification center in OSX >= 10.8
osx.active = no

# GTK notifications. Requires the python modules PyNotify2 and PyGTK.
# !DEPRECATED! (and most probably broken)
gtk.active = no

# Email notification requires a working SMTP configuration in the [General]
# section.
email.active = yes

# Recipient of the email notification
email.to = John Doe<john.doe@example1.com>
